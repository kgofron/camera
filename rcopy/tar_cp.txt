ssh user@machine-where-precious-data-is "tar czpf - /some/important/data" | tar xzpf - -C /new/root/directory

tar cpf - /some/important/data | ssh user@destination-machine "tar xpf - -C /some/directory/"
===========
way to monitor transfer
apt-get install pv
ssh user@machine-where-precious-data-is "tar czpf - /some/important/data" | pv | tar xzpf - -C /new/root/directory

 install pipemeter (alternatives: pipebench, pipeworks)
ssh -C [host] "tar cp [src]"|pipemeter|tar xpf - -C [dest]
+++++++++++++
usr@xf10idd-ioc1:~$ sudo du -Sx /var | sort -nr | tee  /tmp/du.var|less -XMi crap... no space on var for sudo log :(
hrm... looks like doing a sudo tar pipe like this ends up dumping all the data into the sudolog!!! :(
=================================
A different way...  perhaps something like:
sudo bash -c "tar cf - [src] | tar -C [dest] -xf -"
which would have the added benefit of root on the recieving side being able to fully preserve perms/owner/group/etc
================
EXAMPLES:
# exclude disk to which it is copied.

tar --exclude='media' --exclude='cf-update' --exclude='direct' --exclude='lost+found' --exclude='proc'  -cf - * |
 (cd /media/9c7ab425-56b4-4890-8dd4-281174ddb74f/xf03idc-ws1; tar -xpf -)


tar -cf - tar_cp.txt | ssh kgofron@xf10id-srv1 'tar -xf - -C /IXS/kaz/.'
sudo tar -cf - epics | tar -xf - -C /IXS/kaz/backup/.

tar -cf - 28id | ssh kgofron@xf28id1-ioc2 'tar -xf - -C /home/kgofron/.'
====
ssh bcda1@mercury "tar -cf - /net/s100dserv/xorApps/zed" | gzip > zed.tar.gz
====
### Copy from remote 
```
ssh username@old 'tar czf - /home/username' | tar xvzf - -C /home/username 
ssh kgofron@xf10id-ws1 'tar czf - /nsls2/users/kgofron/xf' | tar xvzf - -C /home/kaz/NSLS2/
```
